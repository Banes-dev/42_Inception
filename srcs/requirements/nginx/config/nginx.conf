# Specifie l'utilisateur et le groupe  avec lesquels les work_process s'executent
user nginx;

# Adapte le nombre de workers au CPU
worker_processes auto;

# Systeme de pid pour nginx
pid /run/nginx.pid;

# Module suplementaire pour Nginx
include /etc/nginx/modules-enabled/*.conf;

# Obligatoire mais rarement modifier car suffisant
# Il contient des infos qui influent les connexions reseau simultanees: 
#	- nombre maximum de connexions de chaque processus worker
#	- gestion evenement reseau
events {
    worker_connections 1024;
}

http {
    # Types mimes pour systeme web
    include       mime.types;
    default_type  application/octet-stream;

    # Logs et erreur
    access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    # Optimise l'envoie de fichier du disque vers le reseau
    # sendfile        on;
    # Garde la connexion TCP ouverte pdt 65 sec
    # keepalive_timeout  65;

    server {
        listen 443 ssl;       #IPv4
        listen [::]:443 ssl;  #IPv6
        server_name ehay.42.fr;

        # Chemins des certificats SSL
        ssl_certificate /etc/ssl/certs/cert.crt;
        ssl_certificate_key /etc/ssl/private/cert.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        ssl_ciphers HIGH:!aNULL:!MD5;

        root   /var/www/html;
        index  index.php;

        location = /favicon.ico {
            log_not_found   off;
            access_log      off;
        }
        location / {
            try_files       $uri $uri/ /index.php?$args;
        }

		location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass    wordpress:9000;
            fastcgi_index   index.php;
            include         /etc/nginx/fastcgi_params;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param   SCRIPT_NAME     $fastcgi_script_name;
            # # Inclue les paramètres nécessaires pour configurer et transmettre les requêtes PHP à FastCGI
			# include fastcgi.conf;

            # # Envoyer la requete PHP pour traitement au conteneur wordpress sur le port 9000 ou le service PHP_FPM (FastCGI Process Manager) ecoute
			# fastcgi_pass wordpress.inception:9000;
		}
		# location / {
        #     # Verifier si le fichier existe sur le systeme avant de decider comment le traiter
		# 	# Elle prend plusieurs arguments en les essayant dans l'ordre jusqu'a trouver un valide
		# 		# $uri = URI de la requete = verifie si un fichier existe avec ce nom
		# 		# $uri/ = URI suivi d'un '/' = verifie si un repetoire au nom de l'URI existe
		# 		# Si http://example.com/blog est une requete, la commande va chercher /blog puis /blog/ si necessaire sinon elle reverra une erreur 404
		# 	try_files $uri $uri/ =404;
		# }
    }
}
